*
教程地址：
UML
http://www.uml.org.cn/sjms/sjms-xm.asp
23种设计模式
http://www.riabook.cn/doc/designpattern/


*
巧妙的类组织形式：
1.把当前对象，传递给外来对象（缺点：this指针逃逸）
如：访问者模式，类ElementA中的accept方法
2.利用抽象类（缺点：接口优于抽象类）
如：模板方法模式，AbstractClass类中必须实现方法templateMethod


*
组合与继承
1.继承可以实现静态代码的复用
2.组合可以实现代码的弹性维护


*
抽象类与接口
1.抽象类的扩展性强比接口强（直接加方法，子类可以不用修改，也可以重写方法）————抽象类唯一优点，而且有时还是缺点
     抽象类中增加方法，可能会破坏类层次结构（因为所有后代都继承了此方法，而接口相对来说，只需要在必要的子类增加implements）
3.接口定义类型比用抽象类好（如果使用了抽象类来定义类型，只能使用继承的手段来增加功能）
4.接口可以多实现，而抽象类只能单继承（从这点来看：接口可构造出非层次结构的框架）


*
java与c++
1.多继承的坏处：多个父类有相同成员，可能产生歧义
2.单继承+多实现接口：多个接口有相同的方法，并不会产生歧义（接口中的方法都是抽象的，即：只是声明而已，调用的时候调的肯定是实现类自己的方法）


*
模式分类
根据模式的目的，完成工作来分
创建型: 与对象的创建有关
结构型: 处理类或对象的组合
行为型: 对类或对象怎样交互和怎样分配职责进行描述




