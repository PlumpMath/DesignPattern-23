*定义：
表示一个作用于某对象结构中的各元素的操作，它使我们可以在不改变各元素的类的前提下定义作用于这些元素的新操作


*角色：
1)Vistor：抽象访问者
2)ConcreteVisitor：具体访问者
3)Element：抽象元素
4)ConcreteElement：具体元素
5)ObjectStructure：对象结构，包含Element集合


*
访问者模式的关键在于：把对元素的访问过程抽离出来，抽象成访问者（做法：每个元素都有一个设置访问者的方法）


*
1.优点：把对元素的操作集中到一起，增加新的操作变得很容易，
2.缺点：增加新的元素困难。破坏了分装性，元素把自己暴露给了访问者（即：visitor.visit(this)）
3.结构复杂的对象特别适合使用访问者模式，当增加新操作会简单很多（如：实体加载组件的表间关系、自定义查询组件的查询结果集）


*
应用场合：
权限管理的设计



