*定义：
把易变化的行为/算法抽取出来，封装成对象，以便之后的改动和扩展

*角色：
1)Context: 环境类
2)Strategy: 抽象策略类
3)ConcreteStrategy: 具体策略类


*
策略模式的关键在于：抽取同一种类的行为/算法，一个个封装

*
1.State模式：看当前是什么状态，就采取什么动作。
  Strategy模式：看需求（情境）是什么，采用适当的策略。
2.上下文与具体策略是松耦合关系
3.可以隐藏不想让用户知道的算法和数据结构

*
应用场合：
1.Java SE的容器布局管理
