*定义：
该模式以对客户端透明的方式扩展对象的功能.


*角色：
1)IComponent：抽象构件角色，定义一个抽象接口，来规范准备附加功能的类。
2)ConcreteComponent：具体构件角色，将要被附加功能的类，实现抽象构件角色接口。
3)Decorator：抽象装饰者角色，持有对具体构件角色的引用并定义与抽象构件角色一致的接口。
4)ConcreteDecorator：具体装饰角色，实现抽象装饰者角色，负责为具体构件添加额外功能。


*
装饰者模式的关键在于：装饰者抽象类


*
装饰者模式最成功的地方就是合理地使用了对象组合，通过组合灵活地扩展了Component的功能，所有的扩展的功能都是通过组合而非继承获得的，这种实现是高内聚低耦合的。
在装饰者模式里充分体现了OCP原则(类应该对扩展开发，对修改关闭)


*
应用场合：
1.swing，任意嵌套，用一个或多个组件修饰另一个组件