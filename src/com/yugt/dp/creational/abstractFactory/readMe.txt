*定义:
抽象工厂是指一个"工厂等级结构"可以创建出分属于不同"产品等级结构"的一个"产品族"中的所有对象。

*角色：
AbstractFactory：抽象工厂
ConcreteFactory：具体工厂
AbstractProductA：抽象产品（代表抽象产品A）
ProductA1：具体产品（具体产品A1）
AbstractProductB：抽象产品（代表抽象产品B）
ProductB1：具体产品（具体产品B1）


*
抽象工厂模式的关键在于：理解产品族


*
1.产品族：是指位于不同产品等级结构，功能相关联的产品组成的家族（即：A1+B1或者A1+B2等等）
2.又称为Kit模式
3.优点：隔离了具体类的生成。只需改变具体工厂的实例，就可以在某种程度上改变整个软件系统的行为
4.缺点：在添加新的产品对象时，难以扩展抽象工厂以便生产新种类的产品（增加新的工厂和产品族容易，增加新的产品等级结构麻烦）


*
应用场合：
1.Java SE AWT（抽象窗口工具包）
